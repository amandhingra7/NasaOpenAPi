{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ishaan dhingra\\\\Desktop\\\\NasaOpenAPI\\\\frontend\\\\src\\\\components\\\\Apod.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Apod = () => {\n  _s();\n  const [apodData, setApodData] = useState(null);\n  useEffect(() => {\n    const fetchApod = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/apod');\n        setApodData(response.data);\n      } catch (error) {\n        console.error('Error fetching APOD data:', error);\n      }\n    };\n    fetchApod();\n  }, []);\n  if (!apodData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: apodData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), apodData.media_type === 'video' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Watch the video:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: apodData.url,\n        title: apodData.title,\n        frameBorder: \"0\",\n        allowFullScreen: true,\n        style: {\n          width: '100%',\n          height: '500px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : apodData.url && apodData.url.match(/\\.(jpeg|jpg|gif|png)$/) && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: apodData.url,\n      alt: apodData.title,\n      style: {\n        maxWidth: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: apodData.explanation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Apod, \"bvIZ7Emgu0ZmRiX8GAe5i8fzK6c=\");\n_c = Apod;\nexport default Apod;\nvar _c;\n$RefreshReg$(_c, \"Apod\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Apod","_s","apodData","setApodData","fetchApod","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","title","media_type","src","url","frameBorder","allowFullScreen","style","width","height","match","alt","maxWidth","explanation","_c","$RefreshReg$"],"sources":["C:/Users/ishaan dhingra/Desktop/NasaOpenAPI/frontend/src/components/Apod.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Apod = () => {\r\n  const [apodData, setApodData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchApod = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/apod');\r\n        setApodData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching APOD data:', error);\r\n      }\r\n    };\r\n    fetchApod();\r\n  }, []);\r\n\r\n  if (!apodData) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>{apodData.title}</h1>\r\n      \r\n      {/* Check if the media type is video or image */}\r\n      {apodData.media_type === 'video' ? (\r\n        <div>\r\n          <p>Watch the video:</p>\r\n          <iframe\r\n            src={apodData.url}\r\n            title={apodData.title}\r\n            frameBorder=\"0\"\r\n            allowFullScreen\r\n            style={{ width: '100%', height: '500px' }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        apodData.url && apodData.url.match(/\\.(jpeg|jpg|gif|png)$/) && (\r\n          <img src={apodData.url} alt={apodData.title} style={{ maxWidth: '100%' }} />\r\n        )\r\n      )}\r\n\r\n      <p>{apodData.explanation}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Apod;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,4BAA4B,CAAC;QAC9DH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,QAAQ,EAAE,oBAAOH,OAAA;IAAAW,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE3C,oBACEf,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAKR,QAAQ,CAACa;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAGxBZ,QAAQ,CAACc,UAAU,KAAK,OAAO,gBAC9BjB,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAG;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACvBf,OAAA;QACEkB,GAAG,EAAEf,QAAQ,CAACgB,GAAI;QAClBH,KAAK,EAAEb,QAAQ,CAACa,KAAM;QACtBI,WAAW,EAAC,GAAG;QACfC,eAAe;QACfC,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAQ;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,GAENZ,QAAQ,CAACgB,GAAG,IAAIhB,QAAQ,CAACgB,GAAG,CAACM,KAAK,CAAC,uBAAuB,CAAC,iBACzDzB,OAAA;MAAKkB,GAAG,EAAEf,QAAQ,CAACgB,GAAI;MAACO,GAAG,EAAEvB,QAAQ,CAACa,KAAM;MAACM,KAAK,EAAE;QAAEK,QAAQ,EAAE;MAAO;IAAE;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAE9E,eAEDf,OAAA;MAAAW,QAAA,EAAIR,QAAQ,CAACyB;IAAW;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV,CAAC;AAACb,EAAA,CA1CID,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}